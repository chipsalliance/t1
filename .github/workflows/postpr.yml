name: Post PR
on:
  pull_request:
    types: [closed]
env:
  USER: runner

jobs:
  report:
    name: "Report CI result"
    if: github.event.pull_request.merged == true && always()
    runs-on: "ubuntu-latest"
    outputs:
      should_release_testcase: ${{ steps.testcase_status.outputs.run_release }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
      - id: testcase_status
        run: |
          git diff --name-only HEAD HEAD^ | grep -q "^tests/" && \
            echo "run_release=true" >> $GITHUB_OUTPUT && \
            echo "Release job triggered"

  release:
    runs-on: "ubuntu-latest"
    needs: report
    if: ${{ needs.report.outputs.should_release_testcase == 'true' }}
    steps:
      - uses: cachix/install-nix-action@v19
        with:
          install_url: https://releases.nixos.org/nix/nix-2.13.3/install
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            sandbox = relaxed
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
      - run: |
          #nix build .#testcase --print-build-logs --out-link result
          mkdir result
          echo "TEST" > result/test.txt
          tar czvf rvv-testcase.tar.gz --directory ./result .
      - uses: "marvinpinto/action-automatic-releases@latest"
        id: step-release
        if: success()
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "latest"
          title: "Testcase Release ${{ github.sha }}"
          files: ./rvv-testcase.tar.gz
      - if: success()
        id: step-bump
        run: |
          NIX_FILE="./nix/rvv-testcase-unwrapped.nix"
          NIX_EXPR_PREFIX="with import <nixpkgs> {}; let pkg = callPackage $NIX_FILE {}; in"
          get_src_url() {
            nix eval --impure --raw --expr "$NIX_EXPR_PREFIX pkg.src.url"
          }
          get_output_hash() {
            nix eval --impure --raw --expr "$NIX_EXPR_PREFIX pkg.src.outputHash"
          }
          src_url=$(get_src_url)
          echo "Updating src url: $src_url"
          new_file=$(nix-prefetch-url $src_url --print-path --type sha256 | tail -n1)
          echo "File downloaded to $new_file"
          new_hash=$(nix hash file --base16 --type sha256 --sri $new_file)
          echo "Generated new hash: $new_hash"
          old_hash=$(get_output_hash)
          sed -i "s|$old_hash|$new_hash|" $NIX_FILE
          new_hash=$(get_output_hash)
          if [[ "$old_hash" = "$new_hash" ]]; then
            echo "No update"
            echo "CREATE_PR=0" >> $GITHUB_OUTPUT
          else
            echo "Hash is updated from $old_hash to $new_hash"
            echo "CREATE_PR=1" >> $GITHUB_OUTPUT
          fi
      - if: ${{ steps.step-bump.outputs.CREATE_PR == '1' }}
        uses: peter-evans/create-pull-request@v5
        with:
          add-paths: ./nix/rvv-testcase-unwrapped.nix
          commit-message: "[nix] bump testcase"
          branch: nix-testcase-bump
          delete-branch: true
          title: "[nix] bump testcase"
          body: "Bump rvv-testcase-unwrapped.nix"
          reviewers: |
            avimitin

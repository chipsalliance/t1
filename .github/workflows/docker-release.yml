name: Release Docker
on:
  push:
    tags:
      - '*'

jobs:
  build-image:
    name: "Build docker"
    runs-on: [self-hosted, linux, nixos]
    strategy:
      fail-fast: false
      matrix:
        config:
          - blastoise
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Build verilator emulator"
        run: |
          nix build '.#t1.${{ matrix.config }}.delivery.docker-env.final-image' -L --out-link docker-image
          gzip -c ./docker-image/image.tar > image.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: './docker-image/image.tar.gz'
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Upload to GitHub registry"
        run: |
          # Build testcases with vlen 1024 and vlen 4096
          nix build ".#t1.${{ matrix.config }}.cases.all" --max-jobs auto -L --no-link --cores 64
  upload-image:
    # Use a normal GitHub runner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          pattern: 'docker-image'
      - name: Push
        run: |
          gzip -d image.tar.gz
          docker load -i image.tar
          docker push chipsalliance/t1:latest

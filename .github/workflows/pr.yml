name: PR
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - labeled
env:
  USER: runner

# Cancel the current workflow when new commit pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  gen-test-plan:
    if: '! github.event.pull_request.draft'
    name: "Generate test plan"
    runs-on: [self-hosted, linux, nixos]
    outputs:
      testplan: ${{ steps.get-all-configs.outputs.out }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - id: "get-all-configs"
        run: echo "out=$(nix develop -c t1-helper generateTestPlan)" > $GITHUB_OUTPUT

  build-emulators:
    name: "Build Emulators"
    needs: [gen-test-plan]
    runs-on: [self-hosted, linux, nixos, BIGRAM]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.gen-test-plan.outputs.testplan) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Build verilator emulator"
        run: |
          nix build '.#t1.${{ matrix.config }}.ip.emu' -L --no-link --cores 64
      - name: "Build all testcases"
        run: |
          # Build testcases with vlen 1024 and vlen 4096
          nix build ".#t1.${{ matrix.config }}.cases.all" --max-jobs auto -L --no-link --cores 64

  gen-matrix:
    name: "Prepare for running testcases"
    needs: [build-emulators]
    runs-on: [self-hosted, linux, nixos, BIGRAM]
    env:
      RUNNERS: 70
    outputs:
      ci-tests: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      # actions/checkout will use the "event" commit to checkout repository,
      # which will lead to an unexpected issue that the "event" commit doesn't belongs to the repository,
      # and causing the derivation build output cannot be cache correctly.
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - id: gen-matrix
        name: "Generate test matrix"
        run: |
          echo -n matrix= >> "$GITHUB_OUTPUT"
          nix develop -c t1-helper generateCiMatrix --runnersAmount "$RUNNERS" >> "$GITHUB_OUTPUT"

  build-trace-emulators:
    name: "Build trace emulator"
    needs: [gen-test-plan]
    runs-on: [self-hosted, linux, nixos]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.gen-test-plan.outputs.testplan) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Build verilator emulator with trace"
        run: nix build '.#t1.${{ matrix.config }}.ip.emu-trace' -L --no-link --cores 64

  test-emit:
    if: '! github.event.pull_request.draft'
    name: "Test elaborate"
    runs-on: [self-hosted, linux, nixos]
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Test elaborate"
        run: |
          configArray=( $(ls configgen/generated | sed 's/\.json$//') )
          for cfg in "${configArray[@]}"; do
            echo "Building .#t1.${cfg}.ip.rtl"
            if ! nix build ".#t1.${cfg}.ip.rtl" -L; then
              failed_rtl_configs+=("${cfg}.ip")
            fi
            echo "Building .#t1.${cfg}.subsystem.rtl"
            if ! nix build ".#t1.${cfg}.subsystem.rtl" -L; then
              failed_rtl_configs+=("${cfg}.subsystem")
            fi
          done
          if [ -n "${failed_rtl_configs[*]}"  ]; then
            echo -e "## Failed RTL\n" >> "$GITHUB_STEP_SUMMARY"
            for cfg in "${failed_rtl_configs[@]}"; do
              echo "* ${cfg}" >> $GITHUB_STEP_SUMMARY
            done
            printf "\n" >> $GITHUB_STEP_SUMMARY
          fi

  physical-design-report:
    name: "Request physical design report"
    if: ${{ success() && (contains(github.event.pull_request.labels.*.name, 'PD-Lane') || contains(github.event.pull_request.labels.*.name, 'PD-Lane-DBG'))}}
    runs-on: ubuntu-latest
    needs: [test-emit]
    steps:
      - name: "Request report"
        env:
          # Use env key can help us inspect the data
          JSON_CTX: ${{ toJson(github.event.pull_request.labels.*.name) }}
        run: |
          # GitHub `toJson` will pretty print JSON and causing multiple line escape issue
          # So we have to redirect it to file here
          printf "$JSON_CTX" > _ctx.json
          pdType=$(jq -r 'map(select(. | test("^PD-Lane.*"))) | .[0]' _ctx.json)
          if [[ -z "$pdType" ]] || [[ "$pdType" == "null" ]]; then
            echo "Unable to filter Physical Design type"
            exit 1
          fi

          commitSha="${{ github.event.pull_request.head.sha }}"
          prId="${{ github.event.pull_request.number }}"
          jq -n \
            --arg commit_sha "$commitSha" \
            --arg pr_id "$prId" \
            --arg pd_type "$pdType" \
            '{"event_type":"ci_success","client_payload":{"commit_sha": $commit_sha,"pr_id": $pr_id, "pd_type": $pd_type }}' \
            > payload.json
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.T1_INHOUSE_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${{ secrets.T1_INHOUSE_URL }}" \
            -d '@payload.json'

  run-testcases:
    name: "Run testcases"
    needs: [gen-matrix]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.gen-matrix.outputs.ci-tests) }}
    runs-on: [self-hosted, linux, nixos]
    outputs:
      result: ${{ steps.ci-run.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Run testcases"
        id: ci-run
        run: |
          nix develop -c t1-helper runTests --jobs "${{ matrix.jobs }}" \
            --resultDir test-results-$(head -c 10 /dev/urandom | base32)

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-reports-${{ matrix.id }}
          path: |
            test-results-*/failed-tests.md
            test-results-*/cycle-updates.md
            test-results-*/*_cycle.json

  report:
    name: "Report CI result"
    # Don't run report when:
    #   - user cancel ( we don't need report at this case )
    #   - PR from outside repository ( we don't have permission to push commit into fork repository )
    if: ${{ !cancelled() && github.event.pull_request.head.repo.full_name == github.repository }}
    needs: [run-testcases]
    runs-on: [self-hosted, linux, nixos]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - uses: actions/download-artifact@v4
        with:
          pattern: test-reports-*
          merge-multiple: true
      - name: "Print step summary"
        run: |
          echo -e "\n## Failed tests\n" >> $GITHUB_STEP_SUMMARY
          shopt -s nullglob
          cat test-results-*/failed-tests.md >> $GITHUB_STEP_SUMMARY
          echo -e "\n## Cycle updates\n" >> $GITHUB_STEP_SUMMARY
          shopt -s nullglob
          cat test-results-*/cycle-updates.md >> $GITHUB_STEP_SUMMARY
      - name: "Commit cycle updates"
        run: |
          nix develop -c t1-helper mergeCycleData
          git config user.name github-actions
          git config user.email github-actions@github.com
          changed_cases=$(git diff --name-only '.github/cases/**/default.json')

          if [ -n "$changed_cases" ]; then
            echo "changed cases: $changed_cases"
            git add '.github/cases/**/default.json'
            git commit -m "[ci] update test case cycle data"
            git push origin ${{ github.head_ref }}
          else
            echo "No cycle change detect"
          fi
      - uses: geekyeggo/delete-artifact@v5
        with:
          # test-reports has been used, it can be deleted
          name: test-reports-*

  clean-after-cancelled:
    name: "Clean test reports [ON CANCELLED]"
    if: ${{ cancelled() }}
    runs-on: [self-hosted, linux, nixos]
    needs: [run-testcases]
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: test-reports-*

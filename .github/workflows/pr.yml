name: PR
on: [pull_request]
env:
  USER: runner

jobs:
  gen-matrix:
    name: "Generate test matrix"
    runs-on: [self-hosted, linux]
    env:
      RUNNERS: 16
    outputs:
      ci-tests: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - run: sudo -E .github/setup-actions.sh
        env:
          AWS_CREDENTIALS: ${{secrets.AWS_CREDENTIALS}}
          CACHE_PRIV_KEY: ${{secrets.CACHE_PRIV_KEY}}
          CACHE_DOMAIN: ${{secrets.CACHE_DOMAIN}}
          ROCKETCHIP_NIX_REMOTE_SSH_PRIVKEY: ${{secrets.ROCKETCHIP_NIX_REMOTE_SSH_PRIVKEY}}
          ROCKETCHIP_NIX_REMOTE_HOST: ${{secrets.ROCKETCHIP_NIX_REMOTE_HOST}}
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: |
            post-build-hook = /etc/nix/upload-to-cache.sh
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= minio.inner.fi.c-3.moe:gDg5SOIH65O0tTV89dUawME5BTmduWWaA7as/cqvevM=
            extra-substituters = https://${{secrets.CACHE_DOMAIN}}/nix
            max-jobs = 0
            builders = ssh-ng://nix-remote@${{secrets.ROCKETCHIP_NIX_REMOTE_HOST}}?ssh-key=/etc/nix/builder-key x86_64-linux - 32 1 big-parallel
            builders-use-substitutes = true
      - id: gen-matrix
        name: "Generate test matrix"
        run: |
          echo -n matrix= >> "$GITHUB_OUTPUT"
          nix develop .#ci -c .github/scripts/ci.sc passedMatrixJson --bucketSize "$RUNNERS" >> "$GITHUB_OUTPUT"
      # build verilator emulator first, so that every developer can download new cache from latest commit.
      - name: "Build verilator emulator"
        run: |
          nix build '.#t1.v1024l8b2-test.verilator-emulator' --no-link
          nix build '.#t1.v1024l8b2-test-trace.verilator-emulator' --no-link

  run-testcases:
    name: "Run testcases"
    needs: [gen-matrix]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.gen-matrix.outputs.ci-tests) }}
    runs-on: [self-hosted, linux]
    outputs:
      result: ${{ steps.ci-run.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: sudo -E .github/setup-actions.sh
        env:
          AWS_CREDENTIALS: ${{secrets.AWS_CREDENTIALS}}
          CACHE_PRIV_KEY: ${{secrets.CACHE_PRIV_KEY}}
          CACHE_DOMAIN: ${{secrets.CACHE_DOMAIN}}
          ROCKETCHIP_NIX_REMOTE_SSH_PRIVKEY: ${{secrets.ROCKETCHIP_NIX_REMOTE_SSH_PRIVKEY}}
          ROCKETCHIP_NIX_REMOTE_HOST: ${{secrets.ROCKETCHIP_NIX_REMOTE_HOST}}
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: |
            post-build-hook = /etc/nix/upload-to-cache.sh
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= minio.inner.fi.c-3.moe:gDg5SOIH65O0tTV89dUawME5BTmduWWaA7as/cqvevM=
            extra-substituters = https://${{secrets.CACHE_DOMAIN}}/nix
            max-jobs = 0
            builders = ssh-ng://nix-remote@${{secrets.ROCKETCHIP_NIX_REMOTE_HOST}}?ssh-key=/etc/nix/builder-key x86_64-linux - 32 1 big-parallel
            builders-use-substitutes = true
      - name: "Run testcases"
        id: ci-run
        run: |
          nix develop .#ci -c .github/scripts/ci.sc runTests --jobs "${{ matrix.jobs }}" \
            --resultDir test-results-$(head -c 10 /dev/urandom | base32)

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: |
            test-results-*/failed-tests.md
            test-results-*/cycle-updates.md

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failed-logs
          path: test-results-*/failed-logs

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: nix-post-build-hook-log
          path: /tmp/nix-post-build-hook.log


  gen-fail-wave-matrix:
    name: "Generate matrix for re-testing failing tests"
    if: always()
    needs: [run-testcases]
    runs-on: [self-hosted, linux]
    outputs:
      generate_wave: ${{ steps.generate-matrix.outputs.generate_wave }}
      retry_tasks: ${{ steps.generate-matrix.outputs.retry_tasks }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: test-reports
      - id: generate-matrix
        name: "Generate matrix"
        run: |
          touch all-fail-tests.txt
          shopt -s nullglob
          cat test-results-*/failed-tests.md > all-failed-tests.txt
          retry=$(sed 's/\* //' all-failed-tests.txt | shuf -n3)  # only retry last three failed
          echo "build wave for: $retry"
          if [ -n "$retry" ]; then
            echo "generate_wave=true" >> "$GITHUB_OUTPUT"
            echo -n "retry_tasks=" >> "$GITHUB_OUTPUT"
            echo "$retry" | jq -nR --indent 0 "{include:[{job: inputs}]}" >> "$GITHUB_OUTPUT"
          fi

  build-fail-wave:
    name: "Generate wave for failing tests"
    needs: [gen-fail-wave-matrix]
    if: ${{ always() && needs.gen-fail-wave-matrix.outputs.generate_wave == 'true'  }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.gen-fail-wave-matrix.outputs.retry_tasks) }}
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: sudo -E .github/setup-actions.sh
        env:
          AWS_CREDENTIALS: ${{secrets.AWS_CREDENTIALS}}
          CACHE_PRIV_KEY: ${{secrets.CACHE_PRIV_KEY}}
          CACHE_DOMAIN: ${{secrets.CACHE_DOMAIN}}
          ROCKETCHIP_NIX_REMOTE_SSH_PRIVKEY: ${{secrets.ROCKETCHIP_NIX_REMOTE_SSH_PRIVKEY}}
          ROCKETCHIP_NIX_REMOTE_HOST: ${{secrets.ROCKETCHIP_NIX_REMOTE_HOST}}
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: |
            post-build-hook = /etc/nix/upload-to-cache.sh
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= minio.inner.fi.c-3.moe:gDg5SOIH65O0tTV89dUawME5BTmduWWaA7as/cqvevM=
            extra-substituters = https://${{secrets.CACHE_DOMAIN}}/nix
            max-jobs = 0
            builders = ssh-ng://nix-remote@${{secrets.ROCKETCHIP_NIX_REMOTE_HOST}}?ssh-key=/etc/nix/builder-key x86_64-linux - 32 1 big-parallel
            builders-use-substitutes = true
      - name: "Run failed testcases"
        run: |
          nix develop .#ci -c .github/scripts/ci.sc runFailedTests --jobs "${{ matrix.job }}"
          waveFile=$(find testrun -name 'wave.fst')
          hierFile=$(find testrun -name 'wave.hier')
          if [[ -z "$waveFile" || -n "$hierFile" ]]; then  # when emulator failed, .hier is not merged into .fst
            echo "Verilator doesn't generate wave correctly"
            exit 1
          fi
          mv "$waveFile" ./wave-${{ matrix.job }}.fst
      - uses: actions/upload-artifact@v3
        with:
          name: failed-tests-wave
          path: 'wave-*.fst'
      - run: |
          echo "Test ${{ matrix.job }} run fail"
          # We are just running post action for failing test, so we need to avoid the workflow finishing successfully
          exit 1

  report:
    name: "Report CI result"
    if: always()
    needs: [run-testcases]
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - uses: cachix/install-nix-action@v22
      - uses: actions/download-artifact@v3
        with:
          name: test-reports
      - name: "Print step summary"
        run: |
          echo -e "\n## Failed tests\n" >> $GITHUB_STEP_SUMMARY
          shopt -s nullglob
          cat test-results-*/failed-tests.md >> $GITHUB_STEP_SUMMARY
          echo -e "\n## Cycle updates\n" >> $GITHUB_STEP_SUMMARY
          shopt -s nullglob
          cat test-results-*/cycle-updates.md >> $GITHUB_STEP_SUMMARY
      - name: "Commit cycle updates"
        run: |
          nix shell .#ammonite -c .github/scripts/ci.sc mergeCycleData  # no need to use devShells.ci
          git config user.name github-actions
          git config user.email github-actions@github.com
          git diff -s --exit-code '.github/passed/**/passed.json' \
            || (git add '.github/passed/**/passed.json' \
            && git commit -m "[ci] update test case cycle data" \
            && git push origin ${{ github.head_ref }})


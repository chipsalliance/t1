package build

import $meta._
import mill.{Module, T, _}
import upickle.default.{ReadWriter => RW, macroRW}

object `package` extends MillBuildRootModule {
  def generatedSources = Task {

    // NOTE: Don't use '.mill' here, or mill will automatically import
    def localDepsDefine = Task.Source { "local.scala" }
    def ivyDepsDefine = Task.Source { "ivy.scala"  }

    val template = millbuildtop.buildKind.str match {
      case "debug" => localDepsDefine()
      case "release" => ivyDepsDefine()
      case bt => {
        throw new Exception(s"Invalid MILL_BUILD_TYPE: '${bt}'")
      }
    }

    os.copy.over(template.path, millSourcePath / "T1Deps.scala")

    super.generatedSources() ++ Seq(PathRef(millSourcePath / "T1Deps.scala"))
  }
 }

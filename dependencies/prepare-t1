#!/usr/bin/env bash

(return 0 2>/dev/null) && _IS_EXEC=0 || _IS_EXEC=1

set -e
set -o pipefail

if [[ ! -f "build.mill" ]]; then
  echo "Please run this script in project root" >&2
  exit 1
fi

MILL_HOME=${MILL_HOME:-$(mktemp -d -t 'mill_ivy_home_XXX')}
NVFETCHER_CFG_DIR=${NVFETCHER_CFG_DIR:-./dependencies/ivys}
mkdir -p "$NVFETCHER_CFG_DIR"

function main() {
  local ivyDepsRaw=$(nix eval --json '.#t1.dependencies' \
    --apply 'srcs: with builtins; filter (x: (substring 0 (stringLength "ivy-") x == "ivy-")) (attrNames srcs)')
  local ivyDeps=( $(echo "$ivyDepsRaw" | jq -r '.[]') )

  local ivyDepPaths=()
  for dep in "${ivyDeps[@]}"; do
    path=$(nix build --max-jobs $(nproc) --print-out-paths --no-warn-dirty --no-link ".#t1.dependencies.$dep")
    ivyDepPaths+=("$path")
  done

  export PATH="$(nix build --print-out-paths --no-warn-dirty --no-link '.#xorg.lndir')/bin:$PATH"
  export PATH="$(nix build --print-out-paths --no-warn-dirty --no-link '.#mill-ivy-fetcher')/bin:$PATH"
  export PATH="$(nix build --print-out-paths --no-warn-dirty --no-link '.#mill')/bin:$PATH"
  export PATH="$(nix build --print-out-paths --no-warn-dirty --no-link '.#nvfetcher')/bin:$PATH"

  mkdir -p "$MILL_HOME/.ivy2/local"
  for dep in "${ivyDepPaths[@]}"; do
    lndir "$dep/.ivy2/local" "$MILL_HOME/.ivy2/local"
  done

  mill_ivy_fetcher fetch --home "$MILL_HOME"

  mkdir -p "$NVFETCHER_CFG_DIR/t1"
  mill_ivy_fetcher dump \
    --coursier-dir "$MILL_HOME/.cache/coursier" \
    --dump-path "$NVFETCHER_CFG_DIR/t1/nvfetcher.toml"

  pushd "$NVFETCHER_CFG_DIR/t1"
  nvfetcher
  popd
}

if (( $_IS_EXEC )); then
  main
fi

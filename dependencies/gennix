#!/usr/bin/env bash

(return 0 2>/dev/null) && _IS_EXEC=0 || _IS_EXEC=1

set -e
set -o pipefail

if [[ "$(basename $PWD)" != "dependencies" ]]; then
  echo "Please run this script in 'dependencies' directory" >&2
  exit 1
fi

COMMON_NIX_ARGS=${COMMON_NIX_ARGS:---print-out-paths --no-link --no-warn-dirty}
ROOT_DIR=${CHECKOUT_ROOT_DIR:-unknown}
if [[ "$ROOT_DIR" = "unknown" ]]; then
  echo "CHECKOUT_ROOT_DIR is empty" >&2
  exit 1
fi
NVFETCHER_CFG_DIR=${NVFETCHER_DIR:-ivys}
MILL_HOME=${MILL_HOME:-$(mktemp -d -t 'mill_ivy_home_XXX')}
mkdir -p "$NVFETCHER_CFG_DIR"

function fetchDeps() {
  local repo="$1"; shift
  pushd "$repo" >/dev/null

  mill_ivy_fetcher fetch --home "$MILL_HOME"

  popd >/dev/null
}

function dumpDeps() {
  local cfgDir="$1"; shift
  mill_ivy_fetcher dump \
    --coursier-dir "$MILL_HOME/.cache/coursier" \
    --dump-path "$cfgDir/nvfetcher.toml"
  rm -rf "$MILL_HOME/.cache"
}

function publish_chisel() {
  local chiselDir="$1"; shift

  pushd "$chiselDir" >/dev/null
  _JAVA_TOOL_OPTIONS="-Duser.home=$MILL_HOME $JAVA_TOOL_OPTIONS"
  _JAVA_OPTS="$_JAVA_TOOL_OPTIONS"
  _MILL_JVM_OPTS_PATH=$(mktemp)
  echo -n "$_JAVA_OPTS" | tr ' ' '\n' > "$_MILL_JVM_OPTS_PATH"

  JAVA_TOOL_OPTIONS="$_JAVA_TOOL_OPTIONS" \
  JAVA_OPT="$_JAVA_OPT" \
  MILL_JVM_OPTS_PATH="$_MILL_JVM_OPTS_PATH" \
    mill -i unipublish.publishLocal

  unset _JAVA_TOOL_OPTIONS _JAVA_OPTS _MILL_JVM_OPTS_PATH

  popd >/dev/null
}

function main() {
  export PATH="$(nix build '.#mill-ivy-fetcher' $COMMON_NIX_ARGS)/bin:$PATH"
  export PATH="$(nix build '.#nvfetcher' $COMMON_NIX_ARGS)/bin:$PATH"
  export PATH="$(nix build '.#mill' $COMMON_NIX_ARGS)/bin:$PATH"

  find "$ROOT_DIR" -name 'out' -type d | xargs rm -rfv

  # Build chisel first
  local submodulesSources=(
    $(find "$ROOT_DIR" -maxdepth 2 -wholename '*/chisel/build.mill' -printf '%h\n')
  )
  # Then other dependencies
  submodulesSources+=(
    $(find "$ROOT_DIR" -maxdepth 2 -name 'build.mill' \
        -not -wholename '*/chisel/build.mill' -printf '%h\n')
  )

  for dir in "${submodulesSources[@]}"; do
    local dirName="$(basename "$dir")"
    local cfgDir="$NVFETCHER_CFG_DIR/$dirName"
    mkdir -p "$cfgDir"

    fetchDeps "$dir"

    if [[ "$dirName" = "chisel" ]]; then
      publish_chisel "$dir"
    fi

    dumpDeps "$cfgDir"

    pushd "$cfgDir" >/dev/null
    nvfetcher
    popd >/dev/null
  done
}

if (( $_IS_EXEC )); then
  main
fi

// SPDX-License-Identifier: Apache-2.0
// SPDX-FileCopyrightText: 2023 Jiuyang Liu <liu@jiuyang.me>

package org.chipsalliance.rvdecoderdb.parser

class ArgLUT(val name: String, val msb: Int, val lsb: Int) extends Token {
  override def toString: String = s"$name($msb..$lsb)"
}

object ArgLUT {
  def unapply(str: String): Option[ArgLUT] = all.get(str)
  // TODO: parse from python for syncing up with upstreams
  def all = Map(
    "rd" -> new ArgLUT("rd", 11, 7),
    "rt" -> new ArgLUT("rt", 19, 15),
    "rs1" -> new ArgLUT("rs1", 19, 15),
    "rs2" -> new ArgLUT("rs2", 24, 20),
    "rs3" -> new ArgLUT("rs3", 31, 27),
    "aqrl" -> new ArgLUT("aqrl", 26, 25),
    "aq" -> new ArgLUT("aq", 26, 26),
    "rl" -> new ArgLUT("rl", 25, 25),
    "fm" -> new ArgLUT("fm", 31, 28),
    "pred" -> new ArgLUT("pred", 27, 24),
    "succ" -> new ArgLUT("succ", 23, 20),
    "rm" -> new ArgLUT("rm", 14, 12),
    "funct3" -> new ArgLUT("funct3", 14, 12),
    "funct2" -> new ArgLUT("funct2", 26, 25),
    "imm20" -> new ArgLUT("imm20", 31, 12),
    "jimm20" -> new ArgLUT("jimm20", 31, 12),
    "imm12" -> new ArgLUT("imm12", 31, 20),
    "csr" -> new ArgLUT("csr", 31, 20),
    "imm12hi" -> new ArgLUT("imm12hi", 31, 25),
    "bimm12hi" -> new ArgLUT("bimm12hi", 31, 25),
    "imm12lo" -> new ArgLUT("imm12lo", 11, 7),
    "bimm12lo" -> new ArgLUT("bimm12lo", 11, 7),
    "zimm" -> new ArgLUT("zimm", 19, 15),
    "shamtq" -> new ArgLUT("shamtq", 26, 20),
    "shamtw" -> new ArgLUT("shamtw", 24, 20),
    "shamtw4" -> new ArgLUT("shamtw4", 23, 20),
    "shamtd" -> new ArgLUT("shamtd", 25, 20),
    "bs" -> new ArgLUT("bs", 31, 30),
    "rnum" -> new ArgLUT("rnum", 23, 20),
    "rc" -> new ArgLUT("rc", 29, 25),
    "imm2" -> new ArgLUT("imm2", 21, 20),
    "imm3" -> new ArgLUT("imm3", 22, 20),
    "imm4" -> new ArgLUT("imm4", 23, 20),
    "imm5" -> new ArgLUT("imm5", 24, 20),
    "imm6" -> new ArgLUT("imm6", 25, 20),
    "zimm" -> new ArgLUT("zimm", 19, 15),
    "opcode" -> new ArgLUT("opcode", 6, 0),
    "funct7" -> new ArgLUT("funct7", 31, 25),
    "vd" -> new ArgLUT("vd", 11, 7),
    "vs3" -> new ArgLUT("vs3", 11, 7),
    "vs1" -> new ArgLUT("vs1", 19, 15),
    "vs2" -> new ArgLUT("vs2", 24, 20),
    "vm" -> new ArgLUT("vm", 25, 25),
    "wd" -> new ArgLUT("wd", 26, 26),
    "amoop" -> new ArgLUT("amoop", 31, 27),
    "nf" -> new ArgLUT("nf", 31, 29),
    "simm5" -> new ArgLUT("simm5", 19, 15),
    "zimm5" -> new ArgLUT("zimm5", 19, 15),
    "zimm10" -> new ArgLUT("zimm10", 29, 20),
    "zimm11" -> new ArgLUT("zimm11", 30, 20),
    "zimm6hi" -> new ArgLUT("zimm6hi", 26, 26),
    "zimm6lo" -> new ArgLUT("zimm6lo", 19, 15),
    "c_nzuimm10" -> new ArgLUT("c_nzuimm10", 12, 5),
    "c_uimm7lo" -> new ArgLUT("c_uimm7lo", 6, 5),
    "c_uimm7hi" -> new ArgLUT("c_uimm7hi", 12, 10),
    "c_uimm8lo" -> new ArgLUT("c_uimm8lo", 6, 5),
    "c_uimm8hi" -> new ArgLUT("c_uimm8hi", 12, 10),
    "c_uimm9lo" -> new ArgLUT("c_uimm9lo", 6, 5),
    "c_uimm9hi" -> new ArgLUT("c_uimm9hi", 12, 10),
    "c_nzimm6lo" -> new ArgLUT("c_nzimm6lo", 6, 2),
    "c_nzimm6hi" -> new ArgLUT("c_nzimm6hi", 12, 12),
    "c_imm6lo" -> new ArgLUT("c_imm6lo", 6, 2),
    "c_imm6hi" -> new ArgLUT("c_imm6hi", 12, 12),
    "c_nzimm10hi" -> new ArgLUT("c_nzimm10hi", 12, 12),
    "c_nzimm10lo" -> new ArgLUT("c_nzimm10lo", 6, 2),
    "c_nzimm18hi" -> new ArgLUT("c_nzimm18hi", 12, 12),
    "c_nzimm18lo" -> new ArgLUT("c_nzimm18lo", 6, 2),
    "c_imm12" -> new ArgLUT("c_imm12", 12, 2),
    "c_bimm9lo" -> new ArgLUT("c_bimm9lo", 6, 2),
    "c_bimm9hi" -> new ArgLUT("c_bimm9hi", 12, 10),
    "c_nzuimm5" -> new ArgLUT("c_nzuimm5", 6, 2),
    "c_nzuimm6lo" -> new ArgLUT("c_nzuimm6lo", 6, 2),
    "c_nzuimm6hi" -> new ArgLUT("c_nzuimm6hi", 12, 12),
    "c_uimm8splo" -> new ArgLUT("c_uimm8splo", 6, 2),
    "c_uimm8sphi" -> new ArgLUT("c_uimm8sphi", 12, 12),
    "c_uimm8sp_s" -> new ArgLUT("c_uimm8sp_s", 12, 7),
    "c_uimm10splo" -> new ArgLUT("c_uimm10splo", 6, 2),
    "c_uimm10sphi" -> new ArgLUT("c_uimm10sphi", 12, 12),
    "c_uimm9splo" -> new ArgLUT("c_uimm9splo", 6, 2),
    "c_uimm9sphi" -> new ArgLUT("c_uimm9sphi", 12, 12),
    "c_uimm10sp_s" -> new ArgLUT("c_uimm10sp_s", 12, 7),
    "c_uimm9sp_s" -> new ArgLUT("c_uimm9sp_s", 12, 7),
    "c_uimm2" -> new ArgLUT("c_uimm2", 6, 5),
    "c_uimm1" -> new ArgLUT("c_uimm1", 5, 5),
    "c_rlist" -> new ArgLUT("c_rlist", 7, 4),
    "c_spimm" -> new ArgLUT("c_spimm", 3, 2),
    "c_index" -> new ArgLUT("c_index", 9, 2),
    "rs1_p" -> new ArgLUT("rs1_p", 9, 7),
    "rs2_p" -> new ArgLUT("rs2_p", 4, 2),
    "rd_p" -> new ArgLUT("rd_p", 4, 2),
    "rd_rs1_n0" -> new ArgLUT("rd_rs1_n0", 11, 7),
    "rd_rs1_p" -> new ArgLUT("rd_rs1_p", 9, 7),
    "rd_rs1" -> new ArgLUT("rd_rs1", 11, 7),
    "rd_n2" -> new ArgLUT("rd_n2", 11, 7),
    "rd_n0" -> new ArgLUT("rd_n0", 11, 7),
    "rs1_n0" -> new ArgLUT("rs1_n0", 11, 7),
    "c_rs2_n0" -> new ArgLUT("c_rs2_n0", 6, 2),
    "c_rs1_n0" -> new ArgLUT("c_rs1_n0", 11, 7),
    "c_rs2" -> new ArgLUT("c_rs2", 6, 2),
    "c_sreg1" -> new ArgLUT("c_sreg1", 9, 7),
    "c_sreg2" -> new ArgLUT("c_sreg2", 4, 2)
  )
}
